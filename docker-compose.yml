version: "3"
services:
  # The following service may be used for a db instance:
  # db:
  #   image: postgres:latest
  #   restart: always
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_PASSWORD: 'postgres'
  #   volumes:
  #     - database_data:/var/lib/postgresql/data
  web:
    build:
      context: ./
      dockerfile: ./kafka_producer/Dockerfile
      # context: C:/HUE/Workspace\personal\image-resizer/
      # dockerfile: C:/HUE/Workspace/personal/image-resizer/kafka_producer/Dockerfile
    depends_on:
      - "kafka"
      - "zookeeper"
    expose:
      - "5000"
    ports:
      - "5000:5000"
    volumes:
      - .:/code
      - logvolume01:/var/log
    environment:
      FLASK_ENV: development
  consumer:
    build:
      context: ./
      dockerfile: ./kafka_consumer/Dockerfile
      # context: C:/HUE/Workspace\personal\image-resizer/
      # dockerfile: C:/HUE/Workspace/personal/image-resizer/kafka_consumer/Dockerfile
    depends_on:
      - "kafka"
      - "zookeeper"
    ports:
      - "5001:5001"
    volumes:
      - .:/code
      - logvolume01:/var/log
    environment:
      FLASK_ENV: development
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
volumes:
  logvolume01: {}
  database_data: {}
